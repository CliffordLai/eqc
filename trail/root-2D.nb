(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     39717,        943]
NotebookOptionsPosition[     37956,        877]
NotebookOutlinePosition[     38326,        893]
CellTagsIndexPosition[     38283,        890]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Rigid, \[Theta]1<\[Theta]2, q11<q21", "Section",
 CellChangeTimes->{{3.765314318165032*^9, 3.7653143419918375`*^9}, {
  3.7654024080227375`*^9, 3.765402411415655*^9}, {3.7654025900944386`*^9, 
  3.765402623709797*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{
   "x_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "q11_", ",", "q12_", ",", 
    "q21_", ",", "q22_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "q11"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[Theta]1", "-", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x", "<=", "q11"}], ",", "1", ",", "0"}], "]"}]}], ")"}]}], 
   "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "q12"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[Theta]2", "-", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x", "<=", "q12"}], ",", "1", ",", "0"}], "]"}]}], ")"}]}], 
   "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "q21"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[Theta]1", "-", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x", "<=", "q21"}], ",", "1", ",", "0"}], "]"}]}], ")"}]}], 
   "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "q22"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[Theta]2", "-", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x", "<=", "q22"}], ",", "1", ",", "0"}], "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7654024424865875`*^9, 3.7654025558614345`*^9}}],

Cell[CellGroupData[{

Cell["case 1: q11<q12<q21<q22 ", "Subsection",
 CellChangeTimes->{{3.765402568757518*^9, 3.765402583913201*^9}, {
  3.765402772328703*^9, 3.7654027749951224`*^9}, {3.766150081706235*^9, 
  3.76615008486294*^9}}],

Cell[BoxData[{
 RowBox[{"Assumptions", "\[Rule]", 
  RowBox[{
   RowBox[{"\[Theta]1", "<", "\[Theta]2"}], " ", "&&", " ", 
   RowBox[{"q11", "<", "q12", "<", "q21", "<", "q22"}], " ", "&&", " ", 
   RowBox[{"q11", "<", "x", "<=", "q12"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"x", "\[Equal]", 
  RowBox[{
   RowBox[{"-", "q12"}], "+", "q21", "+", "q22", "+", 
   RowBox[{"q11", " ", "\[Theta]1"}], "-", 
   RowBox[{"q21", " ", "\[Theta]1"}], "+", 
   RowBox[{"q12", " ", "\[Theta]2"}], "-", 
   RowBox[{"q22", " ", "\[Theta]2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"x", "\[Equal]", " ", 
  RowBox[{
   RowBox[{"\[Theta]1", " ", "q11"}], " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Theta]1"}], ")"}], " ", "q21"}], " ", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Theta]2"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"q12", "-", "q22"}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.766150126261653*^9, 3.7661501328929625`*^9}, {
  3.766151363324255*^9, 3.7661514127386513`*^9}}],

Cell[BoxData[{
 RowBox[{"Assumptions", "\[Rule]", 
  RowBox[{
   RowBox[{"\[Theta]1", "<", "\[Theta]2"}], " ", "&&", " ", 
   RowBox[{"q11", "<", "q12", "<", "q21", "<", "q22"}], " ", "&&", " ", 
   RowBox[{"q21", "<", "x", "<=", "q22"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"x", "\[Equal]", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"q21", "+", "q22", "+", 
     RowBox[{"q11", " ", "\[Theta]1"}], "-", 
     RowBox[{"q21", " ", "\[Theta]1"}], "+", 
     RowBox[{"q12", " ", "\[Theta]2"}], "-", 
     RowBox[{"q22", " ", "\[Theta]2"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"x", "\[Equal]", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", "   ", 
    RowBox[{
     RowBox[{"\[Theta]1", " ", "q11"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", " ", "\[Theta]1"}], ")"}], "q21"}], " ", "+", 
     RowBox[{"\[Theta]2", " ", "q12"}], " ", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", " ", "\[Theta]2"}], ")"}], "q22"}]}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.76615014937471*^9, 3.766150149681775*^9}, {
   3.766153586203677*^9, 3.7661536774358125`*^9}, 3.766154418510494*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["case 2: q11<q21<q12<q22 ", "Subsection",
 CellChangeTimes->{{3.765402568757518*^9, 3.765402583913201*^9}, {
   3.765402772328703*^9, 3.7654027749951224`*^9}, {3.766150081706235*^9, 
   3.76615008486294*^9}, 3.7661501652331324`*^9, 3.766150255356453*^9}],

Cell[BoxData[{
 RowBox[{"Assumptions", "\[Rule]", 
  RowBox[{
   RowBox[{"\[Theta]1", "<", "\[Theta]2"}], " ", "&&", " ", 
   RowBox[{"q11", "<", "q21", "<", "q12", "<", "q22"}], " ", "&&", " ", 
   RowBox[{"q11", "<", "x", "<=", "q21"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"x", "\[Equal]", 
  RowBox[{
   RowBox[{"-", "q12"}], "+", "q21", "+", "q22", "+", 
   RowBox[{"q11", " ", "\[Theta]1"}], "-", 
   RowBox[{"q21", " ", "\[Theta]1"}], "+", 
   RowBox[{"q12", " ", "\[Theta]2"}], "-", 
   RowBox[{"q22", " ", "\[Theta]2"}]}]}]}], "Input",
 CellChangeTimes->{{3.766150126261653*^9, 3.7661501328929625`*^9}, {
  3.7661502668348455`*^9, 3.766150281235087*^9}}],

Cell[BoxData[{
 RowBox[{"Assumptions", "\[Rule]", 
  RowBox[{
   RowBox[{"\[Theta]1", "<", "\[Theta]2"}], " ", "&&", " ", 
   RowBox[{"q11", "<", "q21", "<", "q12", "<", "q22"}], " ", "&&", " ", 
   RowBox[{"q12", "<", "x", "<=", "q22"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"x", "\[Equal]", 
  RowBox[{"q22", "+", 
   RowBox[{"q11", " ", "\[Theta]1"}], "-", 
   RowBox[{"q21", " ", "\[Theta]1"}], "+", 
   RowBox[{"q12", " ", "\[Theta]2"}], "-", 
   RowBox[{"q22", " ", "\[Theta]2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"x", " ", "\[Equal]", "  ", 
  RowBox[{
   RowBox[{"\[Theta]1", " ", 
    RowBox[{"(", 
     RowBox[{"q11", " ", "-", "q21"}], ")"}]}], " ", "+", " ", 
   RowBox[{"\[Theta]2", " ", "q12"}], " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Theta]2"}], ")"}], " ", "q22"}]}]}]}], "Input",
 CellChangeTimes->{{3.76615014937471*^9, 3.766150149681775*^9}, {
  3.766150344165543*^9, 3.766150351119956*^9}, {3.766153730870451*^9, 
  3.7661537690442324`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["case 3: q11<q21<q22<q12", "Subsection",
 CellChangeTimes->{{3.765402568757518*^9, 3.765402583913201*^9}, {
   3.765402772328703*^9, 3.7654027749951224`*^9}, {3.766150081706235*^9, 
   3.76615008486294*^9}, 3.7661501652331324`*^9, 3.766150255356453*^9, 
   3.7661504098916335`*^9}],

Cell[BoxData[{
 RowBox[{"Assumptions", "\[Rule]", 
  RowBox[{
   RowBox[{"\[Theta]1", "<", "\[Theta]2"}], " ", "&&", " ", 
   RowBox[{"q11", "<", "q21", "<", "q22", "<", "q12"}], " ", "&&", " ", 
   RowBox[{"q11", "<", "x", "<=", "q21"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"x", "\[Equal]", 
  RowBox[{
   RowBox[{"-", "q12"}], "+", "q21", "+", "q22", "+", 
   RowBox[{"q11", " ", "\[Theta]1"}], "-", 
   RowBox[{"q21", " ", "\[Theta]1"}], "+", 
   RowBox[{"q12", " ", "\[Theta]2"}], "-", 
   RowBox[{"q22", " ", "\[Theta]2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"x", "\[Equal]", " ", 
  RowBox[{
   RowBox[{"\[Theta]1", " ", "q11"}], " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Theta]1"}], ")"}], " ", "q21"}], " ", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Theta]2"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"q12", "-", "q22"}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.766150126261653*^9, 3.7661501328929625`*^9}, {
   3.7661502668348455`*^9, 3.766150281235087*^9}, {3.7661504171769266`*^9, 
   3.7661504374388247`*^9}, 3.766324487391474*^9, 3.7663245280857944`*^9}],

Cell[BoxData[{
 RowBox[{"Assumptions", "\[Rule]", 
  RowBox[{
   RowBox[{"\[Theta]1", "<", "\[Theta]2"}], " ", "&&", " ", 
   RowBox[{"q11", "<", "q21", "<", "q22", "<", "q12"}], "&&", " ", 
   RowBox[{"q22", "<", "x", "<=", "q12"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"x", "\[Equal]", 
  RowBox[{"q12", "-", 
   RowBox[{"q11", " ", "\[Theta]1"}], "+", 
   RowBox[{"q21", " ", "\[Theta]1"}], "-", 
   RowBox[{"q12", " ", "\[Theta]2"}], "+", 
   RowBox[{"q22", " ", "\[Theta]2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"x", "\[Equal]", 
  RowBox[{
   RowBox[{"\[Theta]1", " ", 
    RowBox[{"(", 
     RowBox[{"q21", " ", "-", "q11"}], ")"}]}], " ", "+", " ", 
   RowBox[{"\[Theta]2", " ", "q22"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Theta]2"}], ")"}], " ", "q12"}]}]}]}], "Input",
 CellChangeTimes->{{3.76615014937471*^9, 3.766150149681775*^9}, {
  3.766150344165543*^9, 3.766150351119956*^9}, {3.766150471700062*^9, 
  3.7661504849288855`*^9}, {3.7661537931253824`*^9, 3.7661538406903105`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check if roots exist in the non-constant region", "Subsection",
 CellChangeTimes->{{3.766150562410494*^9, 3.766150583896621*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"q11", "<=", 
    RowBox[{
     RowBox[{"-", "q12"}], "+", "q21", "+", "q22", "+", 
     RowBox[{"q11", " ", "\[Theta]1"}], "-", 
     RowBox[{"q21", " ", "\[Theta]1"}], "+", 
     RowBox[{"q12", " ", "\[Theta]2"}], "-", 
     RowBox[{"q22", " ", "\[Theta]2"}]}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"0", "<", "\[Theta]1", "<", "\[Theta]2", "<", "1"}], " ", "&&", 
     " ", 
     RowBox[{"q11", "<", "q12", "<", "q21", "<", "q22"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.766150541765727*^9, 3.7661505472330265`*^9}, {
  3.766150592311676*^9, 3.7661506560938377`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"q11", "+", "q12", "+", 
   RowBox[{"q21", " ", "\[Theta]1"}], "+", 
   RowBox[{"q22", " ", "\[Theta]2"}]}], "\[LessEqual]", 
  RowBox[{"q21", "+", "q22", "+", 
   RowBox[{"q11", " ", "\[Theta]1"}], "+", 
   RowBox[{"q12", " ", "\[Theta]2"}]}]}]], "Output",
 CellChangeTimes->{{3.766150613136114*^9, 3.766150656763774*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rigid, \[Theta]1<\[Theta]2<\[Theta]3, q11<q21", "Section",
 CellChangeTimes->{{3.765314318165032*^9, 3.7653143419918375`*^9}, {
  3.7654024080227375`*^9, 3.765402411415655*^9}, {3.7654025900944386`*^9, 
  3.765402623709797*^9}, {3.7664082695772333`*^9, 3.766408273111823*^9}, {
  3.766408315935875*^9, 3.7664083202806234`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{
   "x_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", "q11_",
     ",", "q12_", ",", "q13_", ",", "q21_", ",", "q22_", ",", "q23_"}], "]"}],
   ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "q11"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[Theta]1", "-", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x", "<=", "q11"}], ",", "1", ",", "0"}], "]"}]}], ")"}]}], 
   "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "q12"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[Theta]2", "-", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x", "<=", "q12"}], ",", "1", ",", "0"}], "]"}]}], ")"}]}], 
   "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "q13"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[Theta]3", "-", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x", "<=", "q13"}], ",", "1", ",", "0"}], "]"}]}], ")"}]}], 
   "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "q21"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[Theta]1", "-", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x", "<=", "q21"}], ",", "1", ",", "0"}], "]"}]}], ")"}]}], 
   "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "q22"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[Theta]2", "-", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x", "<=", "q22"}], ",", "1", ",", "0"}], "]"}]}], ")"}]}], 
   "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "q23"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[Theta]3", "-", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x", "<=", "q23"}], ",", "1", ",", "0"}], "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7654024424865875`*^9, 3.7654025558614345`*^9}, {
  3.7664081894074817`*^9, 3.766408264295532*^9}}],

Cell[CellGroupData[{

Cell["case 1: q11<q21<q12<q22 <q13<q23", "Subsection",
 CellChangeTimes->{{3.765402568757518*^9, 3.765402583913201*^9}, {
   3.765402772328703*^9, 3.7654027749951224`*^9}, {3.7654034377105656`*^9, 
   3.7654034422119613`*^9}, 3.765403591947271*^9, 3.766408446728165*^9, {
   3.766410078910987*^9, 3.7664100818707714`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{
      "x", ",", "\[Theta]1", ",", "\[Theta]2", ",", "q11", ",", "q12", ",", 
       "q21", ",", "q22"}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"\[Theta]1", "<", "\[Theta]2"}], " ", "&&", " ", 
       RowBox[{"q11", "<", "q21", "<", "q12", "<", "q22"}], " ", "&&", " ", 
       RowBox[{"x", "<=", "q11"}]}]}]}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.76540263095356*^9, 3.765402789270858*^9}, 
   3.7654028266352444`*^9, 3.765403446969207*^9}],

Cell[BoxData[
 RowBox[{"q11", "+", "q12", "-", "q21", "-", "q22", "-", 
  RowBox[{"q11", " ", "\[Theta]1"}], "+", 
  RowBox[{"q21", " ", "\[Theta]1"}], "-", 
  RowBox[{"q12", " ", "\[Theta]2"}], "+", 
  RowBox[{"q22", " ", "\[Theta]2"}]}]], "Output",
 CellChangeTimes->{3.7654028522473993`*^9, 3.765403499979514*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{
    "x", ",", "0.2", ",", "0.6", ",", "0.8", ",", "1", ",", "3", ",", "5", 
     ",", "2.2", ",", "4.3", ",", "6"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7664100473246155`*^9, 3.7664101810775576`*^9}, {
  3.7664110576152554`*^9, 3.76641106022265*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
8WUsHg/L/wvXIG0s
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 8}, {-1.6800000000000006`, 1.8200000000000007`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7664101677305527`*^9, 3.7664101822564692`*^9}, 
   3.766411060874519*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{
    "x", ",", "0.2", ",", "0.6", ",", "0.8", ",", "1", ",", "3", ",", "5", 
     ",", "2", ",", "2.5", ",", "5.5"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7664100473246155`*^9, 3.7664101810775576`*^9}, {
  3.7664110576152554`*^9, 3.76641106022265*^9}, {3.7664123876040998`*^9, 
  3.7664123960273156`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxN1nk8VPv/B/C5jBkaIWayJE3JksjadpPPh67InitJYpIkS6aurZLrlqJS
KEqRuhQVidxryXI0MmPLLEQhkSXpylhymTC/cx8P33N+5/E4j3k8H6/3dv6b
tb6hrkclCASCGH3/+3VW97snFo8jAf7/PcNI02HZ+AD9MYSx5F/y/mLyPUax
nJC9sOyQ7WfMlZm7H41sHUT8lvxU8t5u5sF+zCZvh7njCz1Y/Vv3ypTKw50I
c8lR75J+ja/nI8FLNr9sP2bkw8H6Feq++ef6l2KufX5FabOjG/jfvOsqV+UV
ZMow627q/zTaxsEsFbDYm7tCgNkru6kyWacX83SakUV96SDmrcyfq6PbRjEX
GkXcKYD/YF4/URze82wMs1V/bbCuzDfwv/sYfO6RML9vwH/JGcVje2VXjWN+
uiHc8YXtOFZf/ue8rUfEODavI4UCH/Jx9zpyd0aO4B6SubnDTozPm/HNz5Sj
CEH0A3mDPS7DiAheWxW1UgiYg/aGEduHkUWN0Lv9a4UgQDfBOGfdMCKx4KJq
byAEvsGvTXmUYUSmgqqs8YsQuE6bb9PrHUJybWbVnZyFYGVnuH4TZwix6uhe
F+MpBH0VhfTA4iHkzFT2pl6mEIT9Tpd5GjeEjBoY7866JwSpy4hdGzYOIS3Z
juEa/woBj958dkPUIJKUeKlN4+kEsHU8gOgqDiA0xmzSGoUpYJ4bvltndx/y
ce8Oj0WVGeB28WNQW0A7EtHJVO0fmwUjHxRbk/VYSEuelN6f4h+AftOpq+ba
E5Cbv6e4kDIPYuW4rFD5fBD7/Nq2KuV58OCycz49pQCYltFsOg3nASHWJfp8
6nNwl63lt5wxD5hbNsjnvHkBjg9ZZ52unQcMzY3F/u3lgKR5SdH1jwWQHHNb
NMNkgT7tpjs+1xZAwL0ysyN8FnipJ7c25M4C2FbVeYJrXAdCTG4ZJhQvAN6c
8kDeZB1ot8x1qOlfAITw9GaPsHqQzWBf0rNaBMygO5kvIxsAyCL9kJAUA4ZH
hkVMTCsICN50A8qJwcPG9/8GvmsFN3523xCjKgbTP6sU7zfhgsGOR/vnDMUg
YXWapvEwFyTIW/817iUGbidtiJO5PFD8IdjeIEAMRE+GGSNtPNCVn/op8Dcx
yPp0sbqXwAf6toMKw5fF4NOvryOaPfmAF3shpKdUDMK2WH55KCcAc075RDWW
GKwM7bPO2CEA61a3Zex/IwZVeb9npwQIgP1XkUnaO/TePg1xfJoAhFWsaxIM
iAFJteZgDEsA7sXbHVYYF4PcvYfKw8YFgL3v1KyjSAzsrsxTg9TbwOyKN5x6
CQI0Mf3vaQOyc4ybftIEaLbkzZwEvWwl3N5pRa8+auAuMiYIPTfj/a9VUivn
fsbz92Kd+HSIW6LVWaPDHrdb4H2Hvb4EuGXJs9kWT2yS8BxSz/mafcHddyKv
vsruJ8yxjXxd6wLcSIz2+L5QCWxesoz9OVK4BHafb2oopeyMBFZPelquo3IJ
r3d4a8foysTzdxtD+d5NeD75rqzkmJYkNo9yiXCLGYt7vemeqNPduK9Gy77K
6ZfE++u5Mq2fcdd6uGesm8atk6066CDC+69/7dGPJBAhu8O+5bRhG/hu9iD8
TxIRXr9qfElnUQC8Yo7UNMsSoRtUhm9bBKCOo02eUSRCte/zc+czBEBvxagz
XZUIB598KjEKFIDZHGZ/mBYRRigV6iSSBSCt8RxRwwKdN/yL/C4rPphXtHS0
/QWdl6HXKFTgAz8v4q1TdkRIdVG4kPWRB0zGr+hw3InwYUX3zFw0D7RS0+2Y
oUSYqDpUdTiUC0iMF8msB0RI9IcHd3q2gJAn4e//ySXCdC6Fm/5vM2if3LZO
+RkR6m/vtJpObQbZF5GSoAoitJU9oZfPbQIgv6WDKiDCqBcZcyrWjSBqZlj9
mKQUHFmcuT1tyAZfElc9ofhLwfbbz9rzpWpBZqHPZtVgKegy10HP3YMAF17O
K+1TUpDHck2fjq8BpUr6XZYxUlDF3S4+hVgN4u6aU6JuSUHb6O1HmxcqgMbj
QyGDbCmo0Ki8FghLgGvdfeNqHRJkXNl75K7bfSA1NFDdZECCtUXQst0xE5ST
dO3emZIgvdNwjZzNHbDGrsh3CpDgA0257j+23wT/8GpvbvAgQcJ3PftHp6NB
fG//97QEEoQKVdUc5RSkak7z5YkvJFge+CJy2eEi5DbB04k6ToLSu39brKIV
I6fIyZ8qpkkwaq3ZxdCmYkSXNr9MikCGuu/+vtFuWoLcNGo/mLGSDNOtK55l
kUqRwGNxC5xdZBhFrx0wKahErE+8TAnZQ4YNP2IDhxhVCD1cqKXkTIbbOi0n
btOqkY7zXk7enmQovFa3OB9Tg1hlmd2fZpJh+bmBxIHHtYjq20G4Ngvd93U4
79nZOmS6W+0tO4cM33nYfCV11CGtn1yOBz9B97HzNjGMXiNxwqqUsr/Q/M+A
vxWHXiNCStonx2b0Po9RVqQTG2lWbI6Y4pGhLduOxH/MRnJVf6Lc6SDDedP8
PXqSHMRLJ8R0sJ8MPeSDeT1lHGTrphzO5c9kKH2uRWmLYgOiuPn9QcMx9L5R
/f1JwQ3I2A55YfskGQZ7XLs7wm5AGqys487MkiGVPfbBcm0jkrPnrAp9Ef1+
U6e1GWcbkRiX4oJ6SWmYeee/pxE5sP8zDJKRhulLNvNe/VZBHrf80V+Pl1Kl
YfKSR4MuLxxUw/P7p79r5Wnh+ZnYjS8dNuK5W/xhp0kj3MvS3kTsNMcdUfSI
0+aK95/3tsiuXimD3Zck2xmd14Vbu+xem3efDNZfc9hPb+Uw7m+lE51xE3i9
02FZU1/pZVguV2r5RX0L7us+BftupPw/v/hj0zlbCnyw5Mwg31rN57JYLtM0
ObfNTA7zoVPzhi735TFL93WRglIVsP7jyYKjt/atwEytDE4teI67ZohUx5JR
xL6/di4xIyxIEctZy5XCtN/guUVYWbOHrhLmiq6DmlcvKGH1HjyzIIsi3LP1
y0smenAzJIkXNUZwN0CRu/0U7mif70j/LG6jGKFu1CLuK8tPHNr1ExUyRjq/
GpxsRAYzv6bIEamQvqDlxVFG79M/zn5PosK+FWEtjJoGJL1yWPRQhgofaLPM
RX4NyKSdnyFTFu3fofDsJqUBcejqP7JDHu138V5t8IKDEOZ6WvhUtP60aMFH
zEYCtrRlLa5B3WKC1N+pR7YVI1YeW1CfyrFMaWUhH+4nujG2UyEhS0o6KYSF
nL9+wD/AHJ3feKw1UZaFNAdNXY6yQufT9Q8m2L1CvLV1+OlOVFibcfzLYiKC
xGVc93nvT4XQNdG5O7oC4V48FO15G533e85W3YqniL/nj7+9ZqkwtmX37WnO
I5C141Wz0Q/UAVvPiI3zQKd6fD9xEbWU7qFlmY+B7UfF5c8kaTB2p4wmnZkP
9Pz0/BbkaBB2Hu3USiwC30IOKGZpobbVPbLXrBRE/lF24qMr6jT3nW6sWlDk
ey6uZB/aX6U406H+Cozs2nU33oMGGQOthQciXwFPErfe0JsGHxjb0H30WcD8
6rB67HEaJLRulQy8VQcIabRmeixaT1Jt/D2QDRIe/6bj+wx1ZLdbvmILoHxJ
UPutiAZr4y+UNYa1gOsbspbHlaD70zeqjXS0gLSnDVOPKtB5FWc/rs94A7IL
Vtd+qUfrRasCszS5QGvMpETUgOaU1y1VF7ngsYFtLqUFnb8q2LD7Mxc8LzyV
aCCgQbqGt4jizgNVRRyPk700KLQoRGzV+ABM9Nif70dzG4mJ/fZ8wDKetLg5
SIMuzu7rjkXzQeMLda2/R9F9PotxF3v5wGHKWIU9hvYfcy1NlRcAnqkNpVNI
g0bM3M85UAA6/jo5MTtDg8mxTnasbAE48P3SoIyIBnkJ2Wf5bQLQszmzU20B
7U+eKegjtgFGRHHTRsJKaLT0f2KglF1tLrkSwiWPbp3I8ZbBc2H5qiux8rjX
vwqtTIJ4/YHGun+yTuK5uf6V1p1v8FwjyaWoR1cZy19HrG96fh53oPfswPke
ZbhtyQGG5XkTO1Ww3J8QFcS4j7tX073QWYR7n43ZhMU+VWzferfFD41lqlB3
yVOMhiY3NTUsV42LpLZ149YOCClX3LIK0pds4nDEyzV5FTb/lqr1U4NJ3D+G
tWel3dSx/vcknXq/57jLtHVu1C5bjVkUapXZV4177Opm0dZYDcxtDkfdkzev
wbxpRFqr4e4abN+VCwVTYjGe/x+93WUO
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 8}, {-0.7000000000000011, 0.3000000000000007}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766412397181718*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{
    "x", ",", "0.2", ",", "0.3", ",", "0.99", ",", "1", ",", "3", ",", "5", 
     ",", "3.5", ",", "4", ",", "7.5"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7664115088989162`*^9, 3.7664116085808516`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 8}, {-2.7250000000000014`, 3.275000000000001}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.76641157682129*^9, 3.766411609107942*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{
    "x", ",", "0.2", ",", "0.6", ",", "0.8", ",", "1", ",", "3", ",", "5", 
     ",", "6", ",", "7", ",", "7.5"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7664115088989162`*^9, 3.7664115433098097`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxF1Xk0VP8bB/CxzYxsM3NnzDAzVIQ2SUQp86RFi2zZskfJVs1XiIpKFJGQ
kohS0qIokiXdj4qEJKJComQLjSWJ8JvvOd+f7j/3vM77eT6fe8+59/PMcztg
uUeUQCCQRAiEf+9mnN1XZmZ+4Hs8/r1YqGqX9GnPJQO453/ekJXPf2vXN5sT
MqbmOG3uxj3+c0nqpswevc5Z3xG7sonv0DFr7cauNz+mWmfdaFMSX7Lr/ayD
Ppzbcbr87ex+a6K2DWi5vJzdj/J80OOmR8FsjnLOYLrbrXj/749lRctRJB/z
9v5nDc2OL30NL3n/r5fwnG67Sa2fzbUidr9O4XyY7XfMqCqJU2+bdfzInNpN
3zpmPXpBy7C8oHO2X/7ko6m55d2zuR5/denRhr5Z39cKTM6G/lmrDj0IaL03
MNvv+vaNu//uwVmnPBiwkGb/mHXhtT+b7QJ/zPY3xUvBjbd/3bb9zdpDPX/9
TfK8wdaZvx5zu5sqKyXg3TprgGe4s9AEnGUHyQt4GvInXSpdWWha6cDljnkC
XlZa1cyAEwuJTpkrbFsq4Kmr065iDiwkWURnKm0Q8BboX2t3tmahm8bjHFMz
Ae+olcbnBEsWMmpqmR9qL+A18XM+VZix0OGRDM02voAXdbu0WXMrC/UtXb4p
7YqA16/Y/G7akIVqMrYHKP0S8PKmaK/SNFjoXMypBqU7Qzyj5+EP2iaZiOE6
fk6ZMsLbZeoZ5pzBRJ8tDOymWWO8wXjbOrV2eRT4nq/QMTDOi9SaM3dwkTyq
yZJYdG1mkuf/p5Md6sFAvDTipKjYDO/90xtZmZl0BPQQN51eAhi3quvWDGEI
D1X7YX1AFIjqDftLNDGkumJLUHCLGLyrWXfndhAN9cawb0t5SMBI+od41zwq
Sr3voqvgKwGscwXVO3OpyLzuepmanwQYhiZK7LhHRQXYkuZ1oRIQ42gevDGL
isIvr5EKuigBCxQqXRelUJHSLad9nRUSYJfweNloGBVZPk9fXqpOhKfhF1+f
tqQiiW9fS6uWEuHbQX/SCTMqKiRqbP2wgghS7pbrDptQkfLWXLcRHhFs1sk+
8t1ERf116PxCOyIIpiJSLVZT0em2jp8XIomgcijAhz2fip78Vine30uEKC8r
yZwhCkoi2JvSfxCB7bGK1zpIQX6kuC9Fo0S476YUINlPQRqMP3MkCCSod+hp
d++ioPNa7xxS5EnAMT1ayGqhIO+94VMv15PgofaNvWEvKGjj/uL4fVtIsGFZ
1JWcMgqaGyBYgJmR4MPi/Q2tTymoKczR1NmeBJOq+jy9IgoyStNJH+WTYCOz
Rr7/HgUpNHbCvDQStEyOlFsnUdBoi2JjxXUS+I5/mAxLpKDaL+ZevrdJQPhZ
ujw3noLCBU/iH+eTQHXw9JU5MRQkkLrwZXs1Cfa3swPw4xRUTasOHKkjgcgn
wt3+EAq6qSAildxEgsSP39oVjlCQo/q+FZ0dJCiuzzHxD6AgPc3rL6O6SbDt
TWLYNT8Koul+dFg2QIJP1cGFtQcoaMBATvBumAT/VDoPTvpSUKXRxvDD4yQQ
K1+vutCbgq5vOcKaOy1cv0zD3mYvBYWaP8guFyNDD+NR0VU3Ctpp2w0+kmSQ
lTu2YNKRgnScuY0UOTKsIG+Jt7alILk9O7wK6GSwE8GmciwoqM8naspBkQxH
J1o955hQUHrwzwVZC8hQ2c8HHCgoMDfzZYMlGYYeobQEjIK6Ag7Lj9iR4bjg
u9lBGQqyNTDbQ3Mhg9xipogViYL0K8ZFLXzI4AgtFYvG5NDvlm2GtSfJ0ErX
Ndcql0NHScP5lflkaCztcTNwl0NhzoYZpfKSUClnHmmRLovOSb8/mtUsCTl5
Sg0hTBkU+/CEZshmKcjd++pAvcEclOrjhlRypCHxJ8kkYj8JSVYN/9bXkYUS
/e4P9rvFkZPfn2Xm6XJA72nwXRIrgsjtzUSfRArYJz9zWzf2B/eKq99z0ZoK
lvISPl39Y/jTb8TnzyRpcNvH7cTJbUP4MxnMX+01DSi2osPVrl14UbODSvRJ
DEDu+4TIz0ac5v3R1uYUBhqqq3xSUhpx3982MfOiMOjRP92iY9SIz2VZ/nwc
i4Gnm8qTvefe4ZHWm192Jgv9yCHk9cIG3K5Ox8cwV2iHmplLznX4Q5eH6ZJ5
wvX4inxtiTpc+seyd+8eYVAn+RYl2b7BkczitT4lQjtKhk0NvcY1ts2Tu1Qh
tOhh8Vdq1fh4uUzeUKvQpg6SrnHluKV1dPeTzxiYB/3qTfj0As/uJHMivwjz
a+eryhe9wF3FxCOUeoQerY5eXP4ML044UdTbJ6xX8vR1pj3D6fNnBvIHhLmx
+PZ4lzK8EiZsto1gcFU3mDM4guPz6w5Fy48JHfng047Yp/hRl594x7jQLb1p
RRqleNOg32j2pNCa812Vn5fgWqECjaBpoU/Yz4twKsbPyOx3Wi9Ch7l+cqex
rEK8M/V7vKw4Ha4OftXIji3AL5V0TdyQFLo7xveT00N8eOvuZXxpYf3uXbKB
G3Nxk+YOdwM5OkCZjyvXPhsn/G6teUsXOq+0+9j4ddxzZUPatDIdCMXSeep3
gnH9B7iR3Uo6oKs2/VoW93mf0mOsXFcJ1zNpe5O5/wEvLHanh+caOrQbxy/M
y8/jVfuMRAUZCesNf7W+hkKes5r620umdOBf7Lh2IhvxwlNiXT560KEw/B75
8YtXvDcRTkftk+jgmzv/e9xEI8/DfvKR4zgdHDc5tYYwOnmRtw6qu91jQIVJ
PY9wepi389Xz/rR/5CG+6fyxj0WTPKVz5rmtGkzoPitv7aIhCg6aylvuLmaC
zZbB3pWrROHS64GOYE0mPBOvCJXdKgqYdDTG1GFC5pGAW6U+okCOKg+04DHB
3evdJDtHFIbCVq+tsGZC84aEjA+6YvAiULUqJ4wJ1ZMyAov14iAiP+IWGsGE
1Y+/hS+0EgfDR2WTJpFMyPIrVRDZIw5FI85L+84yIarXd33uKXG4z0+OU01m
gvH76ouyVeKQ5C1rm5zDhCcPo9ZWm0uAt/P417BWJuR6SURvcCbCsKO8fexn
JrS5FplF8Ylw2EGnLvkLE+Ts9tFrw4hwxo7/JLeHCQc2NV6xzSICzTZW+8l3
JlxdG+WWWkSEy9bZt14OMqFWZ616RzUR7lj2JLaNMkFLJTPXW0AEbQuiVN8v
Jrgo7gzIERWeq2aqJ35OMCGOKrN6lE4CI1OjX4RpJjwll03rq5OgysR1n7QI
Cxw88nt265HAclvoV6Y4C466LilLEM6V5i2pO1VILEi1v5GMhHOkd9OHjatl
WPDeNHErx5ME/I1jJRspLBjZLK2y1Z8E4+vp2hYYC2jrwycPHScBeZ3wz1Fg
gZWef3bDJRJoGFSOXVjAggZlK9noVyTwXFaYNbRWaAFW/3sRGTwIQT6u6Syo
1sE68nMlwdpYZ8jQWgEizcXHNSOlYcS1sspKURFEHls5n0qVA4XwQ/SGFkWo
uRb5jGdBhdUrkqiZbYogS6h88tWGCvZfCmQPdSiCqTPp8WlHKlyGMTK7WxFq
FU/dfbOXCpwp/ym3YUWoP38y0SWUCnMD/bqGyWxojgj1OHaXCmqe+wppK9nw
zct/Di5Bg03Ms4869dmgVpkn7i5Fg70V2Q8LDNiwV21kmkilwS3V/mz7dWzo
/fLPiCmHBgs7vK9lmLDhu8OB1jZtGiyx9zyj7c6G4e3e96ddaKBt4u5oGceG
6eWulobFNLhiX79y13k2vDM1JDkiGpC91lH5F9nC85fzJLiCBm0RyhVnU9lg
nflhwaN6GkTjLcte3WJDLsvi9+LvNOjUthKDMjbsmll3VYGDgdm6559MX7BB
nzPXWm8+JvwetAudXrJBZtW0pLUGBnG+lH1HXrOh2K/4YJwOBmtv1jQVfGQD
vUvbmLQdg1v5Bg/KW4XvI0r9o7oDA/rzO9HvPrPhmfKPXKOdGPR9joThb2zY
v/OuYugeDC4qbLyzdJgN5TUqg6MhGIho5Iev+cmG1F6R67RwDHxXqrhsG2eD
H7HdVusMBu83JKyyn2SDscpTadM4DIx2iNC9ptmgBKllPhcxuLeLP3hIhAPG
k5KR1BQMWPzPlafEOfBQMthtbhoG4aGm1y+QOKDE6lmz7BoGP2JKQ27M4UCU
mi3T8AYG9ilL7PJkODCqUzFkkoVBxe0U7WcUDriu161xuINBakVw92d5Dui6
YieChXNnM2GlBVuFA1+S3/TlP8EgTzZz8SI1DpjcMix/jmOgxKUTVy3kQGHB
vfT6Zxj8XDVcbLOMA+caoq0ElRhkHLyvmmDAgTUym58ubsRgskttnGzFgQvH
UXyGcG5MdMc2fbXhQOIJDX6IAIPxnrH8pzs5kBAWZ2onnCNjfRX/+LtwIC7c
VUr2NwbDgx7fP3tzIDqSEBEsnAN9YzfbCk5wIDwOgszZdPhIVC/fncOBg1eR
8/RmOjxWU09Ac7hggdBi+xt0aD1vRjsrw4XApb131bLoICoSlLCTwoXUy9Ql
I7fpYNJSmTDM4EKXv9uSmBzhOX/O+7zqPC4cXii+9GkxHci/7yVG6nEhI8FY
c/5bOthV6ySZ7+bC8O5arb4pOoToOzG5e7nArB/LLSAwICMzIqnXiwtreMrL
T4oxoP9YU1LYAS6cUuAv50gy4LhO0KX8w1xQrKVqm9IZcPtKSTIrngtGetYr
Hi5iwMQBo9T2Ui4kSrbqHrZlgPea4t+9iAviTTvOn7RnQDNZ23bkORf8M6oF
MU4MKLo2j0as4oKlQcnddHcGBDUQIhc3cYG27/K88gMM6EkP+qbzkQthq2jH
av0YYOcrMDJsFT6/xJnW9wEM0JdonzL/woX6tOCkviMM+LUSPxg4yIX4OjsZ
SiQDPMT03h4b4gLhSp23QjQDmt7c14wa5QLfa3Pl/FgGbEpVi0n4xYV2XbRg
STwDCjzTelMmuGAuqn9SN5EBarryxplTXEC1Oe2GSQy4KBJ74z5BCS4n/3sx
gFgrIVoo9teBl0Ncyoh/rVvj2NhF++vRKYNt0spKkPyfBS8K52eY/c0HonUn
9I7/tavvdo3O5r9uMNljE6erPGvNHvKCysvKs+udOZk9MjPzN/8f6yFDcQ==

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 8}, {-6.100000000000001, 5.4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7664115173735094`*^9, 3.7664115436991262`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1362, 684},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.4 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 224, 3, 96, "Section"],
Cell[807, 27, 1284, 43, 70, "Input"],
Cell[CellGroupData[{
Cell[2116, 74, 211, 3, 67, "Subsection"],
Cell[2330, 79, 1030, 25, 97, "Input"],
Cell[3363, 106, 1183, 30, 151, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4583, 141, 259, 3, 67, "Subsection"],
Cell[4845, 146, 663, 14, 70, "Input"],
Cell[5511, 162, 998, 23, 97, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6546, 190, 286, 4, 67, "Subsection"],
Cell[6835, 196, 1131, 26, 97, "Input"],
Cell[7969, 224, 1022, 23, 97, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9028, 252, 135, 1, 67, "Subsection"],
Cell[CellGroupData[{
Cell[9188, 257, 677, 17, 42, "Input"],
Cell[9868, 276, 357, 8, 41, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10286, 291, 333, 4, 96, "Section"],
Cell[10622, 297, 1889, 63, 97, "Input"],
Cell[CellGroupData[{
Cell[12536, 364, 322, 4, 67, "Subsection"],
Cell[CellGroupData[{
Cell[12883, 372, 638, 15, 70, "Input"],
Cell[13524, 389, 316, 6, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13877, 400, 435, 11, 42, "Input"],
Cell[14315, 413, 5262, 97, 340, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19614, 515, 488, 12, 42, "Input"],
Cell[20105, 529, 5222, 96, 366, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25364, 630, 386, 10, 42, "Input"],
Cell[25753, 642, 5623, 102, 338, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31413, 749, 383, 10, 42, "Input"],
Cell[31799, 761, 6117, 111, 340, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
